module autotest (
  input clk,  // clock
   input rst,
   output out[16]
  ) {
 
  alu alu_test;
  
 .clk(clk){
  .rst(rst)
    {
 fsm state={T1,T2,T3,S1,S2,S3,ERROR,GOOD};
      counter ctr (#SIZE(3), #DIV(24));
    }
  dff counter[27];
    }
  
  always {
  alu_test.a=0;
  alu_test.b=0;
   out=0;
    alu_test.alusignal=0;
  if (counter.q[26:0] == 0) {
      case(state.q) {
      state.T1:
       alu_test.a = 16b0001010101010101;
        alu_test.b = 16b0010101010101011;
        alu_test.alusignal = 6b0;       
        out = alu_test.out;
         if (alu_test.out == 16b0100000000000000) { 
            state.d = state.T2;
            } else {
            state.d = state.ERROR;
            }  
      state.T2:
      alu_test.a = 16b1111000011100000;
        alu_test.b = 16b0000000000100000;
        alu_test.alusignal = 6b1;
         out = alu_test.out;
        if (alu_test.out == 16b1111000011000000) { 
            state.d = state.GOOD;
            } else {
            state.d = state.ERROR;
            }  
      state.GOOD:
      out = 16b1111111111111111;
      state.ERROR:
      out  =160111111111111111;
    }
     counter.d = counter.q + 1;
}
